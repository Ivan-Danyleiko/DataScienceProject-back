name: Deploy Backend to Azure

on:
  push:
    branches: [ lolo ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install and upgrade pip
      run: |
        python -m pip install --upgrade pip
        pip --version

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure Poetry and install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-root

    - name: Check environment variables
      run: |
        required_vars=("SQLALCHEMY_DATABASE_URL" "SECRET_KEY" "ALGORITHM" "MAIL_USERNAME" "MAIL_PASSWORD" "MAIL_FROM" "MAIL_FROM_NAME" "MAIL_PORT" "MAIL_SERVER" "CORS_ORIGINS")
        for var in "${required_vars[@]}"
        do
          if [ -z "${!var}" ]; then
            echo "Warning: $var is not set in the current environment"
          else
            echo "$var is available in the environment"
          fi
        done

    - name: Test database connection
      run: |
        python - << EOF
        import os
        from sqlalchemy import create_engine
        from sqlalchemy.exc import SQLAlchemyError

        db_url = os.getenv('SQLALCHEMY_DATABASE_URL')
        print(f'Attempting to connect to database...')

        try:
            engine = create_engine(db_url)
            with engine.connect() as connection:
                result = connection.execute('SELECT 1').scalar()
                print(f'Successfully connected to the database. Test query result: {result}')
        except SQLAlchemyError as e:
            print(f'SQLAlchemy error: {e}')
            exit(1)
        except Exception as e:
            print(f'Unexpected error: {e}')
            exit(1)
        EOF

    - name: Run Alembic migrations
      run: |
        cd app
        alembic upgrade head

    - name: Create startup command file
      run: |
        echo "cd app && gunicorn main:app --bind=0.0.0.0:8000 --timeout 600 --workers 4 --worker-class uvicorn.workers.UvicornWorker" > startup.txt

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'datascienceproject-backend-12345'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BACKEND }}
        package: .