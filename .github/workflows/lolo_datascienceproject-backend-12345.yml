name: Deploy Backend to Azure

on:
  push:
    branches: [ lolo ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-root
        poetry add uvicorn
        poetry export -f requirements.txt --output requirements.txt --without-hashes
        pip install -r requirements.txt

    - name: Update requirements.txt
      run: |
        pip install uvicorn
        pip freeze > requirements.txt
        echo "Contents of requirements.txt:"
        cat requirements.txt

    - name: Set environment variables
      run: |
        echo "SQLALCHEMY_DATABASE_URL=${{ secrets.SQLALCHEMY_DATABASE_URL }}" >> $GITHUB_ENV
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
        echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> $GITHUB_ENV
        echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> $GITHUB_ENV
        echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> $GITHUB_ENV
        echo "MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}" >> $GITHUB_ENV
        echo "MAIL_PORT=465" >> $GITHUB_ENV
        echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> $GITHUB_ENV
        echo "CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}" >> $GITHUB_ENV

    - name: Run Alembic migrations
      run: cd app && alembic upgrade head

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Check Web App status
      run: |
        az webapp show --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --query "{name:name,state:state,hostNames:hostNames[0]}" -o table

    - name: Clean Web App
      run: |
        az webapp deployment source delete --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup

    - name: Prepare and check deployment package
      run: |
        mkdir deploy && cp -r app requirements.txt deploy/
        echo "gunicorn -w 4 -k uvicorn.workers.UvicornWorker app.main:app --bind=0.0.0.0:8000" > deploy/startup.txt
        cd deploy && zip -r ../deploy.zip . -x "*.git*" "*.pytest_cache*" "*.mypy_cache*" "bd_data/*"
        echo "Size of deploy.zip:" && du -sh ../deploy.zip
        echo "Contents of deploy.zip:" && unzip -l ../deploy.zip
        echo "First few lines of startup.txt:"
        unzip -p ../deploy.zip startup.txt | head -n 5

    - name: Check and update Azure Web App
      run: |
        az webapp config set --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --linux-fx-version "PYTHON|3.10" --startup-file "startup.txt"
        az webapp config appsettings set --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --settings WEBSITE_RUN_FROM_PACKAGE=1

    - name: Check Azure Web App configuration
      run: |
        az webapp config show --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --query "{linuxFxVersion:linuxFxVersion,appCommandLine:appCommandLine}" -o table
        az webapp config appsettings list --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup -o table

    - name: Deploy to Azure Web App
      run: |
        az webapp deployment source config-zip --resource-group DataScienceProjectGroup --name datascienceproject-backend-12345 --src deploy.zip --debug

    - name: Check application logs
      run: |
        az webapp log show --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --query "{stdout:stdout,stderr:stderr}" -o table

    - name: Get detailed deployment logs
      if: failure()
      run: |
        az webapp log download --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup
        unzip -p *.zip

    - name: Tail deployment logs
      if: always()
      run: |
        az webapp log tail --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup