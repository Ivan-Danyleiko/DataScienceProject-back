name: Deploy Backend to Azure

on:
  push:
    branches: [ lolo ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry add uvicorn gunicorn fastapi
        poetry install --no-dev --no-interaction --no-root
        poetry export -f requirements.txt --output requirements.txt --without-hashes
        pip install -r requirements.txt

    - name: Update requirements.txt
      run: |
        pip freeze > requirements.txt
        echo "Contents of requirements.txt:"
        cat requirements.txt

    - name: Set environment variables
      run: |
        echo "SQLALCHEMY_DATABASE_URL=${{ secrets.SQLALCHEMY_DATABASE_URL }}" >> $GITHUB_ENV
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
        echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> $GITHUB_ENV
        echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> $GITHUB_ENV
        echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> $GITHUB_ENV
        echo "MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}" >> $GITHUB_ENV
        echo "MAIL_PORT=465" >> $GITHUB_ENV
        echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> $GITHUB_ENV
        echo "CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}" >> $GITHUB_ENV

    - name: Run Alembic migrations
      run: cd app && alembic upgrade head

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Check Web App status
      run: |
        az webapp show --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --query "{name:name,state:state,hostNames:hostNames[0]}" -o table

    - name: Clean Web App
      run: |
        az webapp deployment source delete --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup

    - name: Prepare and check deployment package
      run: |
        mkdir deploy
        cp -r app requirements.txt deploy/
        echo "/home/site/wwwroot/env/bin/gunicorn app.main:app --bind=0.0.0.0:\$PORT --workers 4 --worker-class uvicorn.workers.UvicornWorker" > deploy/startup.txt
        echo '<?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <handlers>
              <add name="PythonHandler" path="*" verb="*" modules="FastCgiModule" scriptProcessor="D:\Python310\python.exe|D:\Python310\Lib\site-packages\wfastcgi.py" resourceType="Unspecified" requireAccess="Script"/>
            </handlers>
            <rewrite>
              <rules>
                <rule name="Configure Python" stopProcessing="true">
                  <match url="(.*)" ignoreCase="false" />
                  <conditions>
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                  </conditions>
                  <action type="Rewrite" url="app/main.py" />
                </rule>
              </rules>
            </rewrite>
          </system.webServer>
        </configuration>' > deploy/web.config
        cd deploy && zip -r ../deploy.zip . -x "*.git*" "*.pytest_cache*" "*.mypy_cache*" "bd_data/*"
        echo "Size of deploy.zip:" && du -sh ../deploy.zip
        echo "Contents of deploy.zip:" && unzip -l ../deploy.zip
        echo "First few lines of startup.txt:"
        unzip -p ../deploy.zip startup.txt | head -n 5
        echo "Contents of web.config:"
        unzip -p ../deploy.zip web.config

    - name: Set permissions for startup files
      run: |
        chmod +x deploy/startup.txt

    - name: Check deploy.zip content
      run: |
        unzip -l deploy.zip
        echo "Contents of requirements.txt:"
        unzip -p deploy.zip requirements.txt

    - name: Enable detailed logging
      run: |
        az webapp config set --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --web-sockets-enabled true
        az webapp config appsettings set --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --settings WEBSITE_HTTPLOGGING_RETENTION_DAYS=1

    - name: Check and update Azure Web App
      run: |
        az webapp config set --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --linux-fx-version "PYTHON|3.10" --startup-file "startup.txt"
        az webapp config appsettings set --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --settings WEBSITE_RUN_FROM_PACKAGE=1

    - name: Set PYTHONPATH
      run: |
        az webapp config appsettings set --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --settings PYTHONPATH="/home/site/wwwroot"

    - name: Check Azure Web App configuration
      run: |
        az webapp config show --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --query "{linuxFxVersion:linuxFxVersion,appCommandLine:appCommandLine}" -o table
        az webapp config appsettings list --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup -o table

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'datascienceproject-backend-12345'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BACKEND }}
        package: ./deploy.zip

    - name: Check Web App status after deployment
      run: |
        az webapp show --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --query "{name:name,state:state,hostNames:hostNames[0]}" -o table
    
    - name: Check Web App settings
      run: |
        az webapp config appsettings list --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --output table
    
    - name: Get deployment logs
      run: |
        az webapp log deployment show --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup
    
    - name: Check Web App availability
      run: |
        curl -I https://datascienceproject-backend-12345.azurewebsites.net

    - name: Check app structure
      run: |
        az webapp command exec --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --command "ls -R /home/site/wwwroot"
        
    - name: Restart Web App
      run: |
        az webapp restart --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup

    - name: Wait for app to start
      run: |
        sleep 60

    - name: Check Web App status after restart
      run: |
        az webapp show --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --query "{name:name,state:state,hostNames:hostNames[0]}" -o table

    - name: Check application logs
      run: |
        timeout 300s az webapp log tail --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup
      continue-on-error: true

    - name: Get detailed deployment logs
      run: |
        az webapp log download --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup
        unzip -p *.zip
      continue-on-error: true

    - name: Check error logs
      run: |
        az webapp log download --name datascienceproject-backend-12345 --resource-group DataScienceProjectGroup --log-file webapp_logs.zip
        unzip -p webapp_logs.zip | grep -i error
      continue-on-error: true